{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ezPluginCustomTag.js","webpack:///webpack/bootstrap f971072c28d64fffc69c","webpack:///./src/bundle/Resources/public/js/alloyeditor/src/plugins/ez-custom-tag.js","webpack:///./src/bundle/Resources/public/js/alloyeditor/src/widgets/ez-custom-tag-base.js","webpack:///(webpack)/buildin/global.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","73","_toConsumableArray","arr","Array","isArray","arr2","length","from","_ezCustomTagBase","_ezCustomTagBase2","obj","default","CKEDITOR","dtd","$editable","span","global","plugins","add","requires","init","editor","customTagDefinition","assign","customTagBaseDefinition","widgets","inlineCustomTagDefinition","template","requiredContent","upcast","element","attributes","on","fireEditorInteraction","syncAlignment","getEzConfigElement","cancelEditEvents","renderIcon","insertWrapper","wrapper","insertElement","customTagConfig","eZ","adminUiConfig","richTextCustomTags","getName","iconWrapper","getIconWrapper","icon","appendHtml","concat","getChildren","$","find","child","dataset","classList","contains","dom","addClass","append","window","74","value","_slicedToArray","sliceIterator","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","TypeError","defaults","content","draggable","editables","selector","setNameFireEditorInteractionTimeout","setAlignmentFireEditorInteractionTimeout","unsetAlignmentFireEditorInteractionTimeout","setConfigFireEditorInteractionTimeout","clearConfigFireEditorInteractionTimeout","appendElement","insert","createFromHtml","output","wrapElement","initOn","instance","getByElement","ready","fire","focus","edit","renderAttributes","renderHeader","getEzContentElement","toggleState","currentTarget","target","clearNode","node","getFirst","getNext","remove","header","getHeader","label","attachButtonsListeners","_this","findOne","forEach","btn","addEventListener","bind","event","_this2","visibleElement","classes","entries","_ref","_ref2","key","className","toggle","_this3","keys","reduce","total","attr","getConfig","setWidgetAttributes","setName","data","clearTimeout","setTimeout","cancel","fireEditorInteractionPrevented","align","setAlignment","unsetAlignment","type","isAligned","setWidgetContent","ezContent","setConfig","valueElement","getValueElement","setText","ezAttributes","getEzAttributesElement","getText","clearConfig","config","firstChild","removeChild","ezelement","evt","wrapperRegion","getWrapperRegion","pageX","left","pageY","top","height","nativeEvent","selectionData","region","moveAfter","insertAfter","moveBefore","insertBefore","scroll","getWindow","getScrollPosition","getClientRect","y","bottom","x","right","direction","SELECTION_TOP_TO_BOTTOM","75","g","Function","eval","e"],"mappings":"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","file":"ezPluginCustomTag.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ezPluginCustomTag\"] = factory();\n\telse\n\t\troot[\"eZ\"] = root[\"eZ\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"] = root[\"eZ\"][\"ezAlloyEditor\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"][\"ezPluginCustomTag\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ezPluginCustomTag\"] = factory();\n\telse\n\t\troot[\"eZ\"] = root[\"eZ\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"] = root[\"eZ\"][\"ezAlloyEditor\"] || {}, root[\"eZ\"][\"ezAlloyEditor\"][\"ezPluginCustomTag\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 73);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 73:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ezCustomTagBase = __webpack_require__(74);\n\nvar _ezCustomTagBase2 = _interopRequireDefault(_ezCustomTagBase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar ZERO_WIDTH_SPACE = '&#8203;';\n\nCKEDITOR.dtd.$editable.span = 1;\n\n(function (global) {\n    if (CKEDITOR.plugins.get('ezcustomtag') && CKEDITOR.plugins.get('ezinlinecustomtag')) {\n        return;\n    }\n\n    CKEDITOR.plugins.add('ezcustomtag', {\n        requires: 'widget,ezaddcontent',\n\n        init: function init(editor) {\n            var customTagDefinition = Object.assign({}, _ezCustomTagBase2.default, { editor: editor, global: global });\n\n            editor.widgets.add('ezcustomtag', customTagDefinition);\n        }\n    });\n\n    CKEDITOR.plugins.add('ezinlinecustomtag', {\n        requires: 'widget,ezaddcontent',\n\n        init: function init(editor) {\n            var inlineCustomTagDefinition = Object.assign({}, _ezCustomTagBase2.default, {\n                editor: editor,\n                global: global,\n                template: '<span class=\"ez-custom-tag ez-custom-tag--content-visible\" data-ezelement=\"eztemplateinline\" data-ezname=\"{name}\">\\n                        <span class=\"ez-custom-tag__icon-wrapper\"></span>\\n                        <span data-ezelement=\"ezcontent\">{content}</span>\\n                    </span>',\n                requiredContent: 'div',\n\n                upcast: function upcast(element) {\n                    return element.name === 'span' && element.attributes['data-ezelement'] === 'eztemplateinline' && !element.attributes['data-eztype'];\n                },\n\n                init: function init() {\n                    this.on('focus', this.fireEditorInteraction);\n                    this.syncAlignment(true);\n                    this.getEzConfigElement();\n                    this.cancelEditEvents();\n                    this.renderIcon();\n                },\n\n                insertWrapper: function insertWrapper(wrapper) {\n                    this.editor.insertElement(wrapper);\n                },\n\n                renderIcon: function renderIcon() {\n                    var customTagConfig = global.eZ.adminUiConfig.richTextCustomTags[this.getName()];\n\n                    if (!customTagConfig) {\n                        return;\n                    }\n\n                    var iconWrapper = this.getIconWrapper();\n                    var icon = '\\n                        <svg class=\"ez-icon ez-icon--small ez-icon--secondary\">\\n                            <use xlink:href=' + customTagConfig.icon + ' />\\n                        </svg>\\n                    ';\n\n                    iconWrapper.appendHtml(icon);\n                },\n\n                getIconWrapper: function getIconWrapper() {\n                    var iconWrapper = [].concat(_toConsumableArray(this.element.getChildren().$)).find(function (child) {\n                        return child.dataset && child.classList.contains('ez-custom-tag__icon-wrapper');\n                    });\n\n                    if (!iconWrapper) {\n                        iconWrapper = new CKEDITOR.dom.element('span');\n                        iconWrapper.addClass('ez-custom-tag__icon-wrapper');\n                        this.element.append(iconWrapper, true);\n                    } else {\n                        iconWrapper = new CKEDITOR.dom.element(iconWrapper);\n                    }\n\n                    return iconWrapper;\n                }\n            });\n\n            editor.widgets.add('ezinlinecustomtag', inlineCustomTagDefinition);\n        }\n    });\n})(window);\n\n/***/ }),\n\n/***/ 74:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar DATA_ALIGNMENT_ATTR = 'ezalign';\n\nvar customTagBaseDefinition = {\n    defaults: {\n        name: 'customtag',\n        content: ''\n    },\n    draggable: false,\n    template: '<div class=\"ez-custom-tag ez-custom-tag--attributes-visible\" data-ezelement=\"eztemplate\" data-ezname=\"{name}\"><div data-ezelement=\"ezcontent\">{content}</div></div>',\n    requiredContent: 'div',\n    editables: {\n        content: {\n            selector: '[data-ezelement=\"ezcontent\"]'\n        }\n    },\n    setNameFireEditorInteractionTimeout: null,\n    setAlignmentFireEditorInteractionTimeout: null,\n    unsetAlignmentFireEditorInteractionTimeout: null,\n    setConfigFireEditorInteractionTimeout: null,\n    clearConfigFireEditorInteractionTimeout: null,\n\n    upcast: function upcast(element) {\n        return element.name === 'div' && element.attributes['data-ezelement'] === 'eztemplate' && !element.attributes['data-eztype'];\n    },\n\n    insertWrapper: function insertWrapper(wrapper) {\n        this.editor.eZ.appendElement(wrapper);\n    },\n\n    /**\n     * Insert an `ezembed` widget in the editor. It overrides the\n     * default implementation to make sure that in the case where an\n     * embed widget is focused, a new one is added after it.\n     *\n     * @method insert\n     */\n    insert: function insert() {\n        var element = CKEDITOR.dom.element.createFromHtml(this.template.output(this.defaults));\n        var wrapper = this.editor.widgets.wrapElement(element, this.name);\n\n        this.editor.widgets.initOn(element, this.name);\n\n        this.insertWrapper(wrapper);\n\n        var instance = this.editor.widgets.getByElement(wrapper);\n        instance.ready = true;\n        instance.fire('ready');\n        instance.focus();\n    },\n\n    /**\n     * It's not possible to *edit* an embed widget in AlloyEditor,\n     * so `edit` directly calls `insert` instead. This is needed\n     * because by default, the CKEditor engine calls this method\n     * when an embed widget has the focus and the `ezcustomtag` command\n     * is executed. In AlloyEditor, we want to insert a new widget,\n     * not to `edit` the focused widget as the editing process is\n     * provided by the style toolbar.\n     *\n     * @method edit\n     */\n    edit: function edit() {\n        this.insert();\n    },\n\n    init: function init() {\n        this.on('focus', this.fireEditorInteraction);\n        this.syncAlignment(true);\n        this.renderAttributes();\n        this.renderHeader();\n        this.getEzContentElement();\n        this.getEzConfigElement();\n        this.cancelEditEvents();\n        this.toggleState({\n            currentTarget: {\n                dataset: {\n                    target: 'attributes'\n                }\n            }\n        });\n    },\n\n    /**\n     * Clear the node.\n     *\n     * @method clearNode\n     * @param {Element} node\n     */\n    clearNode: function clearNode(node) {\n        var element = node.getFirst();\n        var next = void 0;\n\n        while (element) {\n            next = element.getNext();\n            element.remove();\n            element = next;\n        }\n    },\n\n    /**\n     * Renders the custom tag header.\n     *\n     * @method renderHeader\n     */\n    renderHeader: function renderHeader() {\n        var customTagConfig = global.eZ.adminUiConfig.richTextCustomTags[this.getName()];\n\n        if (!customTagConfig) {\n            return;\n        }\n\n        var header = this.getHeader();\n        var template = '\\n                <div class=\"ez-custom-tag__header-label\">\\n                    ' + customTagConfig.label + '\\n                </div>\\n                <div class=\"ez-custom-tag__header-btns\">\\n                    <button class=\"btn ez-custom-tag__header-btn ez-custom-tag__header-btn--attributes\" data-target=\"attributes\">\\n                        <svg class=\"ez-icon ez-icon--small\">\\n                            <use xlink:href=\"/bundles/ezplatformadminui/img/ez-icons.svg#list\"></use>\\n                        </svg>\\n                    </button>\\n                    <button class=\"btn ez-custom-tag__header-btn ez-custom-tag__header-btn--content\" data-target=\"content\">\\n                        <svg class=\"ez-icon ez-icon--small\">\\n                            <use xlink:href=\"/bundles/ezplatformadminui/img/ez-icons.svg#edit\"></use>\\n                        </svg>\\n                    </button>\\n                </div>\\n        ';\n\n        this.clearNode(header);\n\n        header.appendHtml(template);\n\n        this.attachButtonsListeners();\n    },\n\n    /**\n     * Attaches event listeners to toggle state buttons.\n     *\n     * @method attachButtonsListeners\n     */\n    attachButtonsListeners: function attachButtonsListeners() {\n        var _this = this;\n\n        var header = this.getHeader();\n        var attributesBtn = header.findOne('.ez-custom-tag__header-btn--attributes');\n        var contentBtn = header.findOne('.ez-custom-tag__header-btn--content');\n\n        [attributesBtn, contentBtn].forEach(function (btn) {\n            return btn.$.addEventListener('click', _this.toggleState.bind(_this), false);\n        });\n    },\n\n    /**\n     * Toggles the custom tag state.\n     *\n     * @method toggleState\n     * @param {Event} event\n     */\n    toggleState: function toggleState(event) {\n        var _this2 = this;\n\n        var visibleElement = event.currentTarget.dataset.target;\n        var classes = {\n            attributes: 'ez-custom-tag--attributes-visible',\n            content: 'ez-custom-tag--content-visible'\n        };\n\n        Object.entries(classes).forEach(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                key = _ref2[0],\n                className = _ref2[1];\n\n            return _this2.element.$.classList.toggle(className, key === visibleElement);\n        });\n    },\n\n    /**\n     * Renders the custom tag attributes.\n     *\n     * @method renderAttributes\n     */\n    renderAttributes: function renderAttributes() {\n        var _this3 = this;\n\n        var customTagConfig = global.eZ.adminUiConfig.richTextCustomTags[this.getName()];\n\n        if (!customTagConfig) {\n            return;\n        }\n        var attributes = Object.keys(customTagConfig.attributes).reduce(function (total, attr) {\n            var value = _this3.getConfig(attr);\n\n            return total + '<p>' + customTagConfig.attributes[attr].label + ': ' + value + '</p>';\n        }, '');\n\n        this.setWidgetAttributes(attributes);\n    },\n\n    /**\n     * Sets the `name` of the custom tag.\n     *\n     * @method setName\n     * @param {String} name\n     * @return {CKEDITOR.plugins.widget}\n     */\n    setName: function setName(name) {\n        this.element.data('ezname', name);\n\n        window.clearTimeout(this.setNameFireEditorInteractionTimeout);\n        this.setNameFireEditorInteractionTimeout = window.setTimeout(this.fireEditorInteraction.bind(this, 'nameUpdated'), 50);\n\n        return this;\n    },\n\n    /**\n     * Gets the `name` of the custom tag.\n     *\n     * @method getName\n     * @return {CKEDITOR.plugins.widget}\n     */\n    getName: function getName() {\n        return this.element.data('ezname');\n    },\n\n    /**\n     * Cancels the widget events that trigger the `edit` event as\n     * an embed widget can not be edited in a *CKEditor way*.\n     *\n     * @method cancelEditEvents\n     */\n    cancelEditEvents: function cancelEditEvents() {\n        var cancel = function cancel(event) {\n            return event.cancel();\n        };\n\n        this.on('doubleclick', cancel, null, null, 5);\n        this.on('key', cancel, null, null, 5);\n    },\n\n    /**\n     * Initializes the alignment on the widget wrapper if the widget\n     * is aligned.\n     *\n     * @method syncAlignment\n     * @param {Boolean} fireEditorInteractionPrevented\n     */\n    syncAlignment: function syncAlignment(fireEditorInteractionPrevented) {\n        var align = this.element.data(DATA_ALIGNMENT_ATTR);\n\n        if (align) {\n            this.setAlignment(align, fireEditorInteractionPrevented);\n        } else {\n            this.unsetAlignment(fireEditorInteractionPrevented);\n        }\n    },\n\n    /**\n     * Sets the alignment of the embed widget to `type` and fires\n     * the corresponding `editorInteraction` event.\n     *\n     * @method setAlignment\n     * @param {String} type\n     * @param {Boolean} fireEditorInteractionPrevented\n     */\n    setAlignment: function setAlignment(type, fireEditorInteractionPrevented) {\n        this.wrapper.data(DATA_ALIGNMENT_ATTR, type);\n        this.element.data(DATA_ALIGNMENT_ATTR, type);\n\n        if (!fireEditorInteractionPrevented) {\n            window.clearTimeout(this.setAlignmentFireEditorInteractionTimeout);\n            this.setAlignmentFireEditorInteractionTimeout = window.setTimeout(this.fireEditorInteraction.bind(this, 'aligmentUpdated'), 50);\n        }\n    },\n\n    /**\n     * Removes the alignment of the widget and fires the\n     * corresponding `editorInteraction` event.\n     *\n     * @method unsetAlignment\n     * @param {Boolean} fireEditorInteractionPrevented\n     */\n    unsetAlignment: function unsetAlignment(fireEditorInteractionPrevented) {\n        this.wrapper.data(DATA_ALIGNMENT_ATTR, false);\n        this.element.data(DATA_ALIGNMENT_ATTR, false);\n\n        if (!fireEditorInteractionPrevented) {\n            window.clearTimeout(this.unsetAlignmentFireEditorInteractionTimeout);\n            this.unsetAlignmentFireEditorInteractionTimeout = window.setTimeout(this.fireEditorInteraction.bind(this, 'aligmentRemoved'), 50);\n        }\n    },\n\n    /**\n     * Checks whether the embed is aligned with `type` alignment.\n     *\n     * @method isAligned\n     * @param {String} type\n     * @return {Boolean}\n     */\n    isAligned: function isAligned(type) {\n        return this.wrapper.data(DATA_ALIGNMENT_ATTR) === type;\n    },\n\n    /**\n     * Sets the widget content.\n     *\n     * @method setWidgetContent\n     * @param {String|CKEDITOR.dom.node} content\n     * @return {CKEDITOR.plugins.widget}\n     */\n    setWidgetContent: function setWidgetContent(content) {\n        var ezContent = this.getEzContentElement();\n        var element = ezContent.getFirst();\n        var next = void 0;\n\n        while (element) {\n            next = element.getNext();\n            element.remove();\n            element = next;\n        }\n\n        if (content instanceof CKEDITOR.dom.node) {\n            ezContent.append(content);\n        } else {\n            ezContent.appendHtml(content);\n        }\n\n        return this;\n    },\n\n    /**\n     * Sets a config value under the `key` for the custom tag.\n     *\n     * @method setConfig\n     * @param {String} key\n     * @param {String} value\n     * @return {CKEDITOR.plugins.widget}\n     */\n    setConfig: function setConfig(key, value) {\n        var valueElement = this.getValueElement(key);\n\n        if (!valueElement) {\n            valueElement = new CKEDITOR.dom.element('span');\n            valueElement.data('ezelement', 'ezvalue');\n            valueElement.data('ezvalue-key', key);\n            this.getEzConfigElement().append(valueElement);\n        }\n\n        valueElement.setText(value);\n\n        window.clearTimeout(this.setConfigFireEditorInteractionTimeout);\n        this.setConfigFireEditorInteractionTimeout = window.setTimeout(this.fireEditorInteraction.bind(this, 'configUpdated'), 50);\n\n        return this;\n    },\n\n    /**\n     * Sets the widget attributes.\n     *\n     * @method setWidgetAttributes\n     * @param {String|CKEDITOR.dom.node} attributes\n     * @return {CKEDITOR.plugins.widget}\n     */\n    setWidgetAttributes: function setWidgetAttributes(attributes) {\n        var ezAttributes = this.getEzAttributesElement();\n        var element = ezAttributes.getFirst();\n        var next = void 0;\n\n        while (element) {\n            next = element.getNext();\n            element.remove();\n            element = next;\n        }\n\n        if (attributes instanceof CKEDITOR.dom.node) {\n            ezAttributes.append(attributes);\n        } else {\n            ezAttributes.appendHtml(attributes);\n        }\n\n        return this;\n    },\n\n    /**\n     * Returns the config value for the `key` or empty string if the\n     * config key is not found.\n     *\n     * @method getConfig\n     * @return {String}\n     */\n    getConfig: function getConfig(key) {\n        var valueElement = this.getValueElement(key);\n\n        return valueElement ? valueElement.getText() : '';\n    },\n\n    clearConfig: function clearConfig() {\n        var config = this.getEzConfigElement();\n\n        while (config.firstChild) {\n            config.removeChild(config.firstChild);\n        }\n\n        window.clearTimeout(this.clearConfigFireEditorInteractionTimeout);\n        this.clearConfigFireEditorInteractionTimeout = window.setTimeout(this.fireEditorInteraction.bind(this, 'configCleared'), 50);\n    },\n\n    /**\n     * Returns the Element holding the config under `key`\n     *\n     * @method getValueElement\n     * @param {String} key\n     * @return {CKEDITOR.dom.element}\n     */\n    getValueElement: function getValueElement(key) {\n        return this.getEzConfigElement().findOne('[data-ezelement=\"ezvalue\"][data-ezvalue-key=\"' + key + '\"]');\n    },\n\n    /**\n     * Returns the element used as a container the config values. if\n     * it does not exist, it is created.\n     *\n     * @method getEzConfigElement\n     * @return {CKEDITOR.dom.element}\n     */\n    getEzConfigElement: function getEzConfigElement() {\n        var config = [].concat(_toConsumableArray(this.element.getChildren().$)).find(function (child) {\n            return child.dataset && child.dataset.ezelement === 'ezconfig';\n        });\n\n        if (!config) {\n            config = new CKEDITOR.dom.element('span');\n            config.data('ezelement', 'ezconfig');\n            this.element.append(config);\n        } else {\n            config = new CKEDITOR.dom.element(config);\n        }\n\n        return config;\n    },\n\n    /**\n     * Returns the element used as a container the content values. if\n     * it does not exist, it is created.\n     *\n     * @method getEzContentElement\n     * @return {CKEDITOR.dom.element}\n     */\n    getEzContentElement: function getEzContentElement() {\n        var content = [].concat(_toConsumableArray(this.element.getChildren().$)).find(function (child) {\n            return child.dataset && child.dataset.ezelement === 'ezcontent';\n        });\n\n        if (!content) {\n            content = new CKEDITOR.dom.element('div');\n            content.data('ezelement', 'ezcontent');\n            this.element.append(content);\n        } else {\n            content = new CKEDITOR.dom.element(content);\n        }\n\n        return content;\n    },\n\n    /**\n     * Returns the element used as a container the attributes values. if\n     * it does not exist, it is created.\n     *\n     * @method getEzAttributesElement\n     * @return {CKEDITOR.dom.element}\n     */\n    getEzAttributesElement: function getEzAttributesElement() {\n        var attributes = [].concat(_toConsumableArray(this.element.getChildren().$)).find(function (child) {\n            return child.dataset && child.dataset.ezelement === 'ezattributes';\n        });\n\n        if (!attributes) {\n            attributes = new CKEDITOR.dom.element('div');\n            attributes.data('ezelement', 'ezattributes');\n            this.element.append(attributes, true);\n        } else {\n            attributes = new CKEDITOR.dom.element(attributes);\n        }\n\n        return attributes;\n    },\n\n    /**\n     * Returns the element used as a container the header. if\n     * it does not exist, it is created.\n     *\n     * @method getHeader\n     * @return {CKEDITOR.dom.element}\n     */\n    getHeader: function getHeader() {\n        var header = [].concat(_toConsumableArray(this.element.getChildren().$)).find(function (child) {\n            return child.dataset && child.classList.contains('ez-custom-tag__header');\n        });\n\n        if (!header) {\n            header = new CKEDITOR.dom.element('div');\n            header.addClass('ez-custom-tag__header');\n            this.element.append(header, true);\n        } else {\n            header = new CKEDITOR.dom.element(header);\n        }\n\n        return header;\n    },\n\n    /**\n     * Fires the editorInteraction event so that AlloyEditor editor\n     * UI remains visible and is updated. This method also computes\n     * `selectionData.region` and the `pageX` and `pageY` properties\n     * so that the add toolbar is correctly positioned on the\n     * widget.\n     *\n     * @method fireEditorInteraction\n     * @param {Object|String} evt this initial event info object or\n     * the event name for which the `editorInteraction` is fired.\n     */\n    fireEditorInteraction: function fireEditorInteraction(evt) {\n        var wrapperRegion = this.getWrapperRegion();\n        var name = evt.name || evt;\n        var event = {\n            editor: this.editor,\n            target: this.element.$,\n            name: 'widget' + name,\n            pageX: wrapperRegion.left,\n            pageY: wrapperRegion.top + wrapperRegion.height\n        };\n\n        this.editor.focus();\n        this.focus();\n\n        this.editor.fire('editorInteraction', {\n            nativeEvent: event,\n            selectionData: {\n                element: this.element,\n                region: wrapperRegion\n            }\n        });\n    },\n\n    /**\n     * Moves the widget after the given element. It also fires the\n     * `editorInteraction` event so that the UI can respond to that\n     * change.\n     *\n     * @method moveAfter\n     * @param {CKEDITOR.dom.element} element\n     */\n    moveAfter: function moveAfter(element) {\n        this.wrapper.insertAfter(element);\n        this.fireEditorInteraction('moveAfter');\n    },\n\n    /**\n     * Moves the widget before the given element. It also fires the\n     * `editorInteraction` event so that the UI can respond to that\n     * change.\n     *\n     * @method moveAfter\n     * @param {CKEDITOR.dom.element} element\n     */\n    moveBefore: function moveBefore(element) {\n        this.wrapper.insertBefore(element);\n        this.fireEditorInteraction('moveBefore');\n    },\n\n    /**\n     * Returns the wrapper element region.\n     *\n     * @method getWrapperRegion\n     * @private\n     * @return {Object}\n     */\n    getWrapperRegion: function getWrapperRegion() {\n        var scroll = this.wrapper.getWindow().getScrollPosition();\n        var region = this.wrapper.getClientRect();\n\n        region.top += scroll.y;\n        region.bottom += scroll.y;\n        region.left += scroll.x;\n        region.right += scroll.x;\n        region.direction = CKEDITOR.SELECTION_TOP_TO_BOTTOM;\n\n        return region;\n    }\n};\n\nexports.default = customTagBaseDefinition;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(75)))\n\n/***/ }),\n\n/***/ 75:\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ })\n\n/******/ })[\"default\"];\n});\n\n\n// WEBPACK FOOTER //\n// ezPluginCustomTag.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 73);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f971072c28d64fffc69c","import customTagBaseDefinition from '../widgets/ez-custom-tag-base';\n\nconst ZERO_WIDTH_SPACE = '&#8203;';\n\nCKEDITOR.dtd.$editable.span = 1;\n\n(function(global) {\n    if (CKEDITOR.plugins.get('ezcustomtag') && CKEDITOR.plugins.get('ezinlinecustomtag')) {\n        return;\n    }\n\n    CKEDITOR.plugins.add('ezcustomtag', {\n        requires: 'widget,ezaddcontent',\n\n        init: function(editor) {\n            const customTagDefinition = Object.assign({}, customTagBaseDefinition, { editor, global });\n\n            editor.widgets.add('ezcustomtag', customTagDefinition);\n        },\n    });\n\n    CKEDITOR.plugins.add('ezinlinecustomtag', {\n        requires: 'widget,ezaddcontent',\n\n        init: function(editor) {\n            const inlineCustomTagDefinition = Object.assign({}, customTagBaseDefinition, {\n                editor,\n                global,\n                template: `<span class=\"ez-custom-tag ez-custom-tag--content-visible\" data-ezelement=\"eztemplateinline\" data-ezname=\"{name}\">\n                        <span class=\"ez-custom-tag__icon-wrapper\"></span>\n                        <span data-ezelement=\"ezcontent\">{content}</span>\n                    </span>`,\n                requiredContent: 'div',\n\n                upcast: (element) => {\n                    return (\n                        element.name === 'span' &&\n                        element.attributes['data-ezelement'] === 'eztemplateinline' &&\n                        !element.attributes['data-eztype']\n                    );\n                },\n\n                init: function() {\n                    this.on('focus', this.fireEditorInteraction);\n                    this.syncAlignment(true);\n                    this.getEzConfigElement();\n                    this.cancelEditEvents();\n                    this.renderIcon();\n                },\n\n                insertWrapper: function(wrapper) {\n                    this.editor.insertElement(wrapper);\n                },\n\n                renderIcon: function() {\n                    const customTagConfig = global.eZ.adminUiConfig.richTextCustomTags[this.getName()];\n\n                    if (!customTagConfig) {\n                        return;\n                    }\n\n                    const iconWrapper = this.getIconWrapper();\n                    const icon = `\n                        <svg class=\"ez-icon ez-icon--small ez-icon--secondary\">\n                            <use xlink:href=${customTagConfig.icon} />\n                        </svg>\n                    `;\n\n                    iconWrapper.appendHtml(icon);\n                },\n\n                getIconWrapper: function() {\n                    let iconWrapper = [...this.element.getChildren().$].find(\n                        (child) => child.dataset && child.classList.contains('ez-custom-tag__icon-wrapper')\n                    );\n\n                    if (!iconWrapper) {\n                        iconWrapper = new CKEDITOR.dom.element('span');\n                        iconWrapper.addClass('ez-custom-tag__icon-wrapper');\n                        this.element.append(iconWrapper, true);\n                    } else {\n                        iconWrapper = new CKEDITOR.dom.element(iconWrapper);\n                    }\n\n                    return iconWrapper;\n                },\n            });\n\n            editor.widgets.add('ezinlinecustomtag', inlineCustomTagDefinition);\n        },\n    });\n})(window);\n\n\n\n// WEBPACK FOOTER //\n// ./src/bundle/Resources/public/js/alloyeditor/src/plugins/ez-custom-tag.js","const DATA_ALIGNMENT_ATTR = 'ezalign';\n\nconst customTagBaseDefinition = {\n    defaults: {\n        name: 'customtag',\n        content: '',\n    },\n    draggable: false,\n    template:\n        '<div class=\"ez-custom-tag ez-custom-tag--attributes-visible\" data-ezelement=\"eztemplate\" data-ezname=\"{name}\"><div data-ezelement=\"ezcontent\">{content}</div></div>',\n    requiredContent: 'div',\n    editables: {\n        content: {\n            selector: '[data-ezelement=\"ezcontent\"]',\n        },\n    },\n    setNameFireEditorInteractionTimeout: null,\n    setAlignmentFireEditorInteractionTimeout: null,\n    unsetAlignmentFireEditorInteractionTimeout: null,\n    setConfigFireEditorInteractionTimeout: null,\n    clearConfigFireEditorInteractionTimeout: null,\n\n    upcast: (element) => {\n        return element.name === 'div' && element.attributes['data-ezelement'] === 'eztemplate' && !element.attributes['data-eztype'];\n    },\n\n    insertWrapper: function(wrapper) {\n        this.editor.eZ.appendElement(wrapper);\n    },\n\n    /**\n     * Insert an `ezembed` widget in the editor. It overrides the\n     * default implementation to make sure that in the case where an\n     * embed widget is focused, a new one is added after it.\n     *\n     * @method insert\n     */\n    insert: function() {\n        const element = CKEDITOR.dom.element.createFromHtml(this.template.output(this.defaults));\n        const wrapper = this.editor.widgets.wrapElement(element, this.name);\n\n        this.editor.widgets.initOn(element, this.name);\n\n        this.insertWrapper(wrapper);\n\n        const instance = this.editor.widgets.getByElement(wrapper);\n        instance.ready = true;\n        instance.fire('ready');\n        instance.focus();\n    },\n\n    /**\n     * It's not possible to *edit* an embed widget in AlloyEditor,\n     * so `edit` directly calls `insert` instead. This is needed\n     * because by default, the CKEditor engine calls this method\n     * when an embed widget has the focus and the `ezcustomtag` command\n     * is executed. In AlloyEditor, we want to insert a new widget,\n     * not to `edit` the focused widget as the editing process is\n     * provided by the style toolbar.\n     *\n     * @method edit\n     */\n    edit: function() {\n        this.insert();\n    },\n\n    init: function() {\n        this.on('focus', this.fireEditorInteraction);\n        this.syncAlignment(true);\n        this.renderAttributes();\n        this.renderHeader();\n        this.getEzContentElement();\n        this.getEzConfigElement();\n        this.cancelEditEvents();\n        this.toggleState({\n            currentTarget: {\n                dataset: {\n                    target: 'attributes',\n                },\n            },\n        });\n    },\n\n    /**\n     * Clear the node.\n     *\n     * @method clearNode\n     * @param {Element} node\n     */\n    clearNode: function(node) {\n        let element = node.getFirst();\n        let next;\n\n        while (element) {\n            next = element.getNext();\n            element.remove();\n            element = next;\n        }\n    },\n\n    /**\n     * Renders the custom tag header.\n     *\n     * @method renderHeader\n     */\n    renderHeader: function() {\n        const customTagConfig = global.eZ.adminUiConfig.richTextCustomTags[this.getName()];\n\n        if (!customTagConfig) {\n            return;\n        }\n\n        const header = this.getHeader();\n        const template = `\n                <div class=\"ez-custom-tag__header-label\">\n                    ${customTagConfig.label}\n                </div>\n                <div class=\"ez-custom-tag__header-btns\">\n                    <button class=\"btn ez-custom-tag__header-btn ez-custom-tag__header-btn--attributes\" data-target=\"attributes\">\n                        <svg class=\"ez-icon ez-icon--small\">\n                            <use xlink:href=\"/bundles/ezplatformadminui/img/ez-icons.svg#list\"></use>\n                        </svg>\n                    </button>\n                    <button class=\"btn ez-custom-tag__header-btn ez-custom-tag__header-btn--content\" data-target=\"content\">\n                        <svg class=\"ez-icon ez-icon--small\">\n                            <use xlink:href=\"/bundles/ezplatformadminui/img/ez-icons.svg#edit\"></use>\n                        </svg>\n                    </button>\n                </div>\n        `;\n\n        this.clearNode(header);\n\n        header.appendHtml(template);\n\n        this.attachButtonsListeners();\n    },\n\n    /**\n     * Attaches event listeners to toggle state buttons.\n     *\n     * @method attachButtonsListeners\n     */\n    attachButtonsListeners: function() {\n        const header = this.getHeader();\n        const attributesBtn = header.findOne('.ez-custom-tag__header-btn--attributes');\n        const contentBtn = header.findOne('.ez-custom-tag__header-btn--content');\n\n        [attributesBtn, contentBtn].forEach((btn) => btn.$.addEventListener('click', this.toggleState.bind(this), false));\n    },\n\n    /**\n     * Toggles the custom tag state.\n     *\n     * @method toggleState\n     * @param {Event} event\n     */\n    toggleState: function(event) {\n        const visibleElement = event.currentTarget.dataset.target;\n        const classes = {\n            attributes: 'ez-custom-tag--attributes-visible',\n            content: 'ez-custom-tag--content-visible',\n        };\n\n        Object.entries(classes).forEach(([key, className]) => this.element.$.classList.toggle(className, key === visibleElement));\n    },\n\n    /**\n     * Renders the custom tag attributes.\n     *\n     * @method renderAttributes\n     */\n    renderAttributes: function() {\n        const customTagConfig = global.eZ.adminUiConfig.richTextCustomTags[this.getName()];\n\n        if (!customTagConfig) {\n            return;\n        }\n        const attributes = Object.keys(customTagConfig.attributes).reduce((total, attr) => {\n            const value = this.getConfig(attr);\n\n            return `${total}<p>${customTagConfig.attributes[attr].label}: ${value}</p>`;\n        }, '');\n\n        this.setWidgetAttributes(attributes);\n    },\n\n    /**\n     * Sets the `name` of the custom tag.\n     *\n     * @method setName\n     * @param {String} name\n     * @return {CKEDITOR.plugins.widget}\n     */\n    setName: function(name) {\n        this.element.data('ezname', name);\n\n        window.clearTimeout(this.setNameFireEditorInteractionTimeout);\n        this.setNameFireEditorInteractionTimeout = window.setTimeout(this.fireEditorInteraction.bind(this, 'nameUpdated'), 50);\n\n        return this;\n    },\n\n    /**\n     * Gets the `name` of the custom tag.\n     *\n     * @method getName\n     * @return {CKEDITOR.plugins.widget}\n     */\n    getName: function() {\n        return this.element.data('ezname');\n    },\n\n    /**\n     * Cancels the widget events that trigger the `edit` event as\n     * an embed widget can not be edited in a *CKEditor way*.\n     *\n     * @method cancelEditEvents\n     */\n    cancelEditEvents: function() {\n        const cancel = (event) => event.cancel();\n\n        this.on('doubleclick', cancel, null, null, 5);\n        this.on('key', cancel, null, null, 5);\n    },\n\n    /**\n     * Initializes the alignment on the widget wrapper if the widget\n     * is aligned.\n     *\n     * @method syncAlignment\n     * @param {Boolean} fireEditorInteractionPrevented\n     */\n    syncAlignment: function(fireEditorInteractionPrevented) {\n        const align = this.element.data(DATA_ALIGNMENT_ATTR);\n\n        if (align) {\n            this.setAlignment(align, fireEditorInteractionPrevented);\n        } else {\n            this.unsetAlignment(fireEditorInteractionPrevented);\n        }\n    },\n\n    /**\n     * Sets the alignment of the embed widget to `type` and fires\n     * the corresponding `editorInteraction` event.\n     *\n     * @method setAlignment\n     * @param {String} type\n     * @param {Boolean} fireEditorInteractionPrevented\n     */\n    setAlignment: function(type, fireEditorInteractionPrevented) {\n        this.wrapper.data(DATA_ALIGNMENT_ATTR, type);\n        this.element.data(DATA_ALIGNMENT_ATTR, type);\n\n        if (!fireEditorInteractionPrevented) {\n            window.clearTimeout(this.setAlignmentFireEditorInteractionTimeout);\n            this.setAlignmentFireEditorInteractionTimeout = window.setTimeout(this.fireEditorInteraction.bind(this, 'aligmentUpdated'), 50);\n        }\n    },\n\n    /**\n     * Removes the alignment of the widget and fires the\n     * corresponding `editorInteraction` event.\n     *\n     * @method unsetAlignment\n     * @param {Boolean} fireEditorInteractionPrevented\n     */\n    unsetAlignment: function(fireEditorInteractionPrevented) {\n        this.wrapper.data(DATA_ALIGNMENT_ATTR, false);\n        this.element.data(DATA_ALIGNMENT_ATTR, false);\n\n        if (!fireEditorInteractionPrevented) {\n            window.clearTimeout(this.unsetAlignmentFireEditorInteractionTimeout);\n            this.unsetAlignmentFireEditorInteractionTimeout = window.setTimeout(\n                this.fireEditorInteraction.bind(this, 'aligmentRemoved'),\n                50\n            );\n        }\n    },\n\n    /**\n     * Checks whether the embed is aligned with `type` alignment.\n     *\n     * @method isAligned\n     * @param {String} type\n     * @return {Boolean}\n     */\n    isAligned: function(type) {\n        return this.wrapper.data(DATA_ALIGNMENT_ATTR) === type;\n    },\n\n    /**\n     * Sets the widget content.\n     *\n     * @method setWidgetContent\n     * @param {String|CKEDITOR.dom.node} content\n     * @return {CKEDITOR.plugins.widget}\n     */\n    setWidgetContent: function(content) {\n        const ezContent = this.getEzContentElement();\n        let element = ezContent.getFirst();\n        let next;\n\n        while (element) {\n            next = element.getNext();\n            element.remove();\n            element = next;\n        }\n\n        if (content instanceof CKEDITOR.dom.node) {\n            ezContent.append(content);\n        } else {\n            ezContent.appendHtml(content);\n        }\n\n        return this;\n    },\n\n    /**\n     * Sets a config value under the `key` for the custom tag.\n     *\n     * @method setConfig\n     * @param {String} key\n     * @param {String} value\n     * @return {CKEDITOR.plugins.widget}\n     */\n    setConfig: function(key, value) {\n        let valueElement = this.getValueElement(key);\n\n        if (!valueElement) {\n            valueElement = new CKEDITOR.dom.element('span');\n            valueElement.data('ezelement', 'ezvalue');\n            valueElement.data('ezvalue-key', key);\n            this.getEzConfigElement().append(valueElement);\n        }\n\n        valueElement.setText(value);\n\n        window.clearTimeout(this.setConfigFireEditorInteractionTimeout);\n        this.setConfigFireEditorInteractionTimeout = window.setTimeout(this.fireEditorInteraction.bind(this, 'configUpdated'), 50);\n\n        return this;\n    },\n\n    /**\n     * Sets the widget attributes.\n     *\n     * @method setWidgetAttributes\n     * @param {String|CKEDITOR.dom.node} attributes\n     * @return {CKEDITOR.plugins.widget}\n     */\n    setWidgetAttributes: function(attributes) {\n        const ezAttributes = this.getEzAttributesElement();\n        let element = ezAttributes.getFirst();\n        let next;\n\n        while (element) {\n            next = element.getNext();\n            element.remove();\n            element = next;\n        }\n\n        if (attributes instanceof CKEDITOR.dom.node) {\n            ezAttributes.append(attributes);\n        } else {\n            ezAttributes.appendHtml(attributes);\n        }\n\n        return this;\n    },\n\n    /**\n     * Returns the config value for the `key` or empty string if the\n     * config key is not found.\n     *\n     * @method getConfig\n     * @return {String}\n     */\n    getConfig: function(key) {\n        const valueElement = this.getValueElement(key);\n\n        return valueElement ? valueElement.getText() : '';\n    },\n\n    clearConfig: function() {\n        const config = this.getEzConfigElement();\n\n        while (config.firstChild) {\n            config.removeChild(config.firstChild);\n        }\n\n        window.clearTimeout(this.clearConfigFireEditorInteractionTimeout);\n        this.clearConfigFireEditorInteractionTimeout = window.setTimeout(this.fireEditorInteraction.bind(this, 'configCleared'), 50);\n    },\n\n    /**\n     * Returns the Element holding the config under `key`\n     *\n     * @method getValueElement\n     * @param {String} key\n     * @return {CKEDITOR.dom.element}\n     */\n    getValueElement: function(key) {\n        return this.getEzConfigElement().findOne('[data-ezelement=\"ezvalue\"][data-ezvalue-key=\"' + key + '\"]');\n    },\n\n    /**\n     * Returns the element used as a container the config values. if\n     * it does not exist, it is created.\n     *\n     * @method getEzConfigElement\n     * @return {CKEDITOR.dom.element}\n     */\n    getEzConfigElement: function() {\n        let config = [...this.element.getChildren().$].find((child) => child.dataset && child.dataset.ezelement === 'ezconfig');\n\n        if (!config) {\n            config = new CKEDITOR.dom.element('span');\n            config.data('ezelement', 'ezconfig');\n            this.element.append(config);\n        } else {\n            config = new CKEDITOR.dom.element(config);\n        }\n\n        return config;\n    },\n\n    /**\n     * Returns the element used as a container the content values. if\n     * it does not exist, it is created.\n     *\n     * @method getEzContentElement\n     * @return {CKEDITOR.dom.element}\n     */\n    getEzContentElement: function() {\n        let content = [...this.element.getChildren().$].find((child) => child.dataset && child.dataset.ezelement === 'ezcontent');\n\n        if (!content) {\n            content = new CKEDITOR.dom.element('div');\n            content.data('ezelement', 'ezcontent');\n            this.element.append(content);\n        } else {\n            content = new CKEDITOR.dom.element(content);\n        }\n\n        return content;\n    },\n\n    /**\n     * Returns the element used as a container the attributes values. if\n     * it does not exist, it is created.\n     *\n     * @method getEzAttributesElement\n     * @return {CKEDITOR.dom.element}\n     */\n    getEzAttributesElement: function() {\n        let attributes = [...this.element.getChildren().$].find((child) => child.dataset && child.dataset.ezelement === 'ezattributes');\n\n        if (!attributes) {\n            attributes = new CKEDITOR.dom.element('div');\n            attributes.data('ezelement', 'ezattributes');\n            this.element.append(attributes, true);\n        } else {\n            attributes = new CKEDITOR.dom.element(attributes);\n        }\n\n        return attributes;\n    },\n\n    /**\n     * Returns the element used as a container the header. if\n     * it does not exist, it is created.\n     *\n     * @method getHeader\n     * @return {CKEDITOR.dom.element}\n     */\n    getHeader: function() {\n        let header = [...this.element.getChildren().$].find((child) => child.dataset && child.classList.contains('ez-custom-tag__header'));\n\n        if (!header) {\n            header = new CKEDITOR.dom.element('div');\n            header.addClass('ez-custom-tag__header');\n            this.element.append(header, true);\n        } else {\n            header = new CKEDITOR.dom.element(header);\n        }\n\n        return header;\n    },\n\n    /**\n     * Fires the editorInteraction event so that AlloyEditor editor\n     * UI remains visible and is updated. This method also computes\n     * `selectionData.region` and the `pageX` and `pageY` properties\n     * so that the add toolbar is correctly positioned on the\n     * widget.\n     *\n     * @method fireEditorInteraction\n     * @param {Object|String} evt this initial event info object or\n     * the event name for which the `editorInteraction` is fired.\n     */\n    fireEditorInteraction: function(evt) {\n        const wrapperRegion = this.getWrapperRegion();\n        const name = evt.name || evt;\n        const event = {\n            editor: this.editor,\n            target: this.element.$,\n            name: 'widget' + name,\n            pageX: wrapperRegion.left,\n            pageY: wrapperRegion.top + wrapperRegion.height,\n        };\n\n        this.editor.focus();\n        this.focus();\n\n        this.editor.fire('editorInteraction', {\n            nativeEvent: event,\n            selectionData: {\n                element: this.element,\n                region: wrapperRegion,\n            },\n        });\n    },\n\n    /**\n     * Moves the widget after the given element. It also fires the\n     * `editorInteraction` event so that the UI can respond to that\n     * change.\n     *\n     * @method moveAfter\n     * @param {CKEDITOR.dom.element} element\n     */\n    moveAfter: function(element) {\n        this.wrapper.insertAfter(element);\n        this.fireEditorInteraction('moveAfter');\n    },\n\n    /**\n     * Moves the widget before the given element. It also fires the\n     * `editorInteraction` event so that the UI can respond to that\n     * change.\n     *\n     * @method moveAfter\n     * @param {CKEDITOR.dom.element} element\n     */\n    moveBefore: function(element) {\n        this.wrapper.insertBefore(element);\n        this.fireEditorInteraction('moveBefore');\n    },\n\n    /**\n     * Returns the wrapper element region.\n     *\n     * @method getWrapperRegion\n     * @private\n     * @return {Object}\n     */\n    getWrapperRegion: function() {\n        const scroll = this.wrapper.getWindow().getScrollPosition();\n        const region = this.wrapper.getClientRect();\n\n        region.top += scroll.y;\n        region.bottom += scroll.y;\n        region.left += scroll.x;\n        region.right += scroll.x;\n        region.direction = CKEDITOR.SELECTION_TOP_TO_BOTTOM;\n\n        return region;\n    },\n};\n\nexport default customTagBaseDefinition;\n\n\n\n// WEBPACK FOOTER //\n// ./src/bundle/Resources/public/js/alloyeditor/src/widgets/ez-custom-tag-base.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 75\n// module chunks = 54"],"sourceRoot":""}